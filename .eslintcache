[{"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js":"1","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js":"2","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js":"3","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js":"4","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js":"5","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js":"6","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js":"7","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js":"8","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js":"9","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js":"10","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js":"11","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js":"12","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js":"13","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js":"14","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js":"15","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/LogoutButton.js":"16","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveAuthCode.js":"17"},{"size":773,"mtime":1609806219160,"results":"18","hashOfConfig":"19"},{"size":223,"mtime":1610557916520,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607442902563,"results":"21","hashOfConfig":"19"},{"size":880,"mtime":1616375540784,"results":"22","hashOfConfig":"19"},{"size":1760,"mtime":1617484515584,"results":"23","hashOfConfig":"19"},{"size":1396,"mtime":1616375540779,"results":"24","hashOfConfig":"19"},{"size":1309,"mtime":1616375540776,"results":"25","hashOfConfig":"19"},{"size":631,"mtime":1616375540778,"results":"26","hashOfConfig":"19"},{"size":859,"mtime":1616375540782,"results":"27","hashOfConfig":"19"},{"size":1722,"mtime":1616375540777,"results":"28","hashOfConfig":"19"},{"size":733,"mtime":1616375540782,"results":"29","hashOfConfig":"19"},{"size":523,"mtime":1616375540783,"results":"30","hashOfConfig":"19"},{"size":577,"mtime":1616375540780,"results":"31","hashOfConfig":"19"},{"size":2509,"mtime":1612989835513,"results":"32","hashOfConfig":"19"},{"size":4178,"mtime":1617123955724,"results":"33","hashOfConfig":"19"},{"size":263,"mtime":1616617391195,"results":"34","hashOfConfig":"19"},{"size":410,"mtime":1617216776145,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"yjpb4k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js",[],["74","75"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js",["76"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport SampleCard from '../containers/SampleCard'\nimport { Row, Col } from 'react-bootstrap'\nimport SampleView from '../containers/SampleView'\n\nclass Samples extends React.Component {\n  \n  componentDidMount() {\n    this.fetchSamples();\n  }\n\n  fetchSamples = () => {\n    fetch ('http://localhost:3000/api/v1/samples')\n    .then(resp => resp.json())\n    .then(allSamples => this.props.renderSamples(allSamples))\n  }\n\n  renderAllSamples = () => {\n    return this.props.allSamples.map((sample, index) =>\n      <SampleCard\n        key={index}\n        sample={sample}\n      />\n    )\n  }\n  \n  render() {\n    return(\n      <Row>\n        <Col className=\"card-column\" md=\"auto\">\n          <div className=\"samples-container\">\n            {this.props.allSamples ? this.renderAllSamples() : \"samples deleted from state\"}\n          </div>\n        </Col>\n        <Col className=\"sample-column\">\n          <div className=\"sample-view\">          \n            {this.props.selectedSample ? <SampleView/> : <h1>Please Select a Sample</h1>}\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nconst msp = state => {\n  return {\n    allSamples: state.allSamples,\n    selectedSample: state.selectedSample\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderSamples: (allSamples) => dispatch({ type: \"GET_ALL_SAMPLES\", allSamples: allSamples})\n  }\n}\n\nexport default connect(msp,mdp)(Samples)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js",["77"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport UserSample from '../containers/UserSamples'\nimport {Row, Col} from 'react-bootstrap'\n\n\nconst Home = props => {\n  useEffect(() => fetchUser(), []);\n\n  const fetchUser = () => {\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n    fetch(`http://localhost:3000/api/v1/doctors/showdoctor`, fetchObj)\n    .then(resp => resp.json())\n    .then(user => props.loginUser(user))\n  }\n  \n  return(\n    <div className=\"home-main\">\n      <h2>Welcome, Dr. {props.user ? props.user.name : null}</h2>\n      <Row>\n        <Col className=\"user-samples-main\">\n          <h3>Click on a past sample for tracking information</h3>\n          {props.user ? <UserSample/> : \"No First Doses\"}\n        </Col>\n        <Col className=\"user-info-main\">\n          I'm the second column foolish human.\n        </Col>\n      </Row>\n    </div>\n    \n  )\n}\n\nconst msp = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mdp = (dispatch) => {\n  return {\n    loginUser: (user) => dispatch({type:\"LOGIN_USER\", user:user})\n  }\n}\n\nexport default connect(msp, mdp)(Home)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js",["78"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport emailjs from 'emailjs-com';\nimport {connect} from 'react-redux';\nimport {Button, Modal, } from 'react-bootstrap';\n\n\nconst OrderView = (props) => {\n  const history = useHistory();\n  const [lgShow, setLgShow] = useState(false);\n  \n  const orderClick = () => {\n    // emailjs.send(\"service_c25ldbm\",\"template_4c4r0yu\", {\n    //   from_name: `${props.user.name}`,\n    //   to_name: \"First Dose Ordering\",\n    //   sample_name: `${props.selectedSample.sample_name}`,\n    //   user_name: `${props.user.name}`,\n    //   address_1: `${props.user.address_1}`,\n    //   address_2: `${props.user.address_2}`,\n    //   city: `${props.user.city}`,\n    //   state: `${props.user.state}`,\n    //   zipcode: `${props.user.zipcode}`,\n    //   phone_number: `${props.user.phone_number}`,\n    //   license_id: `${props.user.license_id}`,\n    //   professional_title: `${props.user.professional_title}`,\n    //   quantity: `${props.quantity}`\n    //   }, \"user_Ypmj33LBBAihNfVMLDVYj\");\n    //   alert(\"Your order has been sent\")\n      createDoctorSample();\n      props.resetQuantity()\n  }\n\n  \n\n  const createDoctorSample = () => {\n    \n  history.push('/Docusign-Auth')\n    // fetch ('http://localhost:3000/api/v1/docusign/create_session') \n    //   .then(resp => resp.json())\n    //   .then(data => console.log(data))\n      \n    // const doctor_sample = {\n    //   quantity: props.quantity,\n    //   doctor_id: props.user.id,\n    //   sample_id: props.selectedSample.id,\n    //   signature_status_success: false\n    // }\n    // fetch (`http://localhost:3000/api/v1/doctor_samples`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //      Accept: \"application/json\"\n    //   },\n    //   body: JSON.stringify({\n    //     doctor_sample\n    //   })\n    // })\n    //   .then(resp => resp.json())\n    //   .then((newSample) => {\n    //     console.log(newSample)\n    //     props.renderNewSample(newSample)\n    //   })\n  }\n\n  const handleSelect = e => {\n    let value = e.target.value\n    props.selectQuantity(value)\n  }\n\n  const {professional_title, address_1, address_2, name, city, state, zipcode} = props.user\n\n  return (\n  <div className=\"order-form-container\">\n      <br></br>\n     <Button onClick={() => setLgShow(true)}>Order Sample</Button>\n     <Modal\n        size=\"lg\"\n        show={lgShow}\n        onHide={() => setLgShow(false)}\n        aria-labelledby=\"modal-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"modal-title\">\n            Order Form\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h5>Order will be sent to: </h5>\n          <div className=\"modal-doc-info\"></div>\n            {professional_title} {name}\n            <br></br>\n            {address_1}\n            <br></br>\n            {address_2}\n            <br></br>\n            {city} {state}, {zipcode}\n          <div className=\"modal-quantity-select\">\n          <select name=\"quantity\" onChange={handleSelect}>\n            <option value=\"none\" > \n              Select Quantity\n            </option> \n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select>\n          </div>\n      <br></br>\n      {/* call Ruby backend to initiate status//alert user that an order is pending docusign check their email//modal.close() */}\n      <Button onClick={() => orderClick()} disabled={!props.quantity}>Order Sample</Button>\n        </Modal.Body>\n      </Modal>\n      \n    {/* reinsert into onClick AFTER DOCUSIGN API TESTING IS DONE\n     orderClick(props.selectedSample) */}\n  </div>\n  )\n}\n\nconst msp = state => {\n  return {\n    user: state.user,\n    selectedSample: state.selectedSample,\n    quantity: state.quantity\n  }\n}\nconst mdp = dispatch => {\n  return {\n    renderNewSample: (newSample) => dispatch({type:\"RENDER_NEW_SAMPLE\", newSample:newSample}),\n    selectQuantity: (value) => dispatch({type:\"SELECT_QUANTITY\", value:value}),\n    resetQuantity: () => dispatch({type:\"RESET_QUANTITY\"})\n  }\n}\n\nexport default connect(msp,mdp)(OrderView) ","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/LogoutButton.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveAuthCode.js",["79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":9,"column":35,"nodeType":"86","endLine":9,"endColumn":37,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":8,"column":32,"nodeType":"86","endLine":8,"endColumn":34,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":15},{"ruleId":"90","severity":1,"message":"94","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSamples'. Either include it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["98"],"no-unused-vars","'emailjs' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [fetchSamples]",{"range":"103","text":"104"},"Update the dependencies array to be: [fetchUser]",{"range":"105","text":"106"},[286,288],"[fetchSamples]",[228,230],"[fetchUser]"]