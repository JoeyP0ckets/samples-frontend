[{"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js":"1","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js":"2","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js":"3","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js":"4","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js":"5","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js":"6","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js":"7","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js":"8","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js":"9","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js":"10","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js":"11","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js":"12","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js":"13","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/context/AuthProvider.js":"14","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Logout.js":"15","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/auth/useAuth.js":"16","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/apiRoot.js":"17","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/YourDoses.js":"18","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/HomeContainer.js":"19","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/ShippingLabel.js":"20","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/ShippingTracker.js":"21","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/ContractsTable.js":"22","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/FirstDoses.js":"23","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/ContactFooter.js":"24"},{"size":774,"mtime":1660585373330,"results":"25","hashOfConfig":"26"},{"size":729,"mtime":1660585520704,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1607442902563,"results":"28","hashOfConfig":"26"},{"size":1268,"mtime":1660249651242,"results":"29","hashOfConfig":"26"},{"size":1232,"mtime":1660235736953,"results":"30","hashOfConfig":"26"},{"size":219,"mtime":1659454906144,"results":"31","hashOfConfig":"26"},{"size":656,"mtime":1660241286231,"results":"32","hashOfConfig":"26"},{"size":971,"mtime":1660005732557,"results":"33","hashOfConfig":"26"},{"size":981,"mtime":1660241624657,"results":"34","hashOfConfig":"26"},{"size":1201,"mtime":1659723771917,"results":"35","hashOfConfig":"26"},{"size":1069,"mtime":1660006832081,"results":"36","hashOfConfig":"26"},{"size":2419,"mtime":1643749794743,"results":"37","hashOfConfig":"26"},{"size":3793,"mtime":1660243353444,"results":"38","hashOfConfig":"26"},{"size":558,"mtime":1634657889147,"results":"39","hashOfConfig":"26"},{"size":549,"mtime":1660578517129,"results":"40","hashOfConfig":"26"},{"size":4721,"mtime":1660585254814,"results":"41","hashOfConfig":"26"},{"size":193,"mtime":1642620501602,"results":"42","hashOfConfig":"26"},{"size":3246,"mtime":1660249542541,"results":"43","hashOfConfig":"26"},{"size":1710,"mtime":1660242048815,"results":"44","hashOfConfig":"26"},{"size":1113,"mtime":1660242127483,"results":"45","hashOfConfig":"26"},{"size":1689,"mtime":1660058393242,"results":"46","hashOfConfig":"26"},{"size":1241,"mtime":1660058255545,"results":"47","hashOfConfig":"26"},{"size":1483,"mtime":1660584568738,"results":"48","hashOfConfig":"26"},{"size":318,"mtime":1660239580365,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"169i5ph",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js",[],["103","104"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js",["105"],"import React from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nconst SampleCard = (props) => {\n\n  const sampleClick = (selectedSample) => {\n   props.selectSample(selectedSample)\n  }\n\n  const {sample_name, image_url, } = props.sample;\n\n  return (\n    <Card style={{ width: '18rem' }} onClick={() => sampleClick(props.sample)}>\n      <Card.Img variant=\"top\" src={image_url} alt={sample_name} />\n    </Card>\n  )\n}\n\nconst mdp = dispatch => {\n  return {\n    selectSample: (selectedSample) => dispatch({ type: \"SELECT_SAMPLE\", selectedSample: selectedSample})\n  }\n}\n\nexport default connect(null,mdp)(SampleCard)\n\n  ","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js",["106"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js",["107"],"import React, {useState, useContext } from \"react\"\nimport { Form, Button} from 'react-bootstrap'\nimport { NavLink } from \"react-router-dom\"\nimport { AuthContext }from '../context/AuthProvider'\n\n\nconst Signup = () => {\n  \n  const [signupErrorMessage, setSignupErrorMessage] = useState(undefined)\n  const { signupUser } = useContext(AuthContext);\n  \n  const handleSignupSubmit = e => {\n    e.preventDefault();\n    const errorMessage = signupUser(\n      e.target.name.value, \n      e.target.password.value,\n      e.target.email.value,\n      e.target.address_1.value,\n      e.target.address_2.value,\n      e.target.city.value,\n      e.target.state.value,\n      e.target.zipcode.value,\n      e.target.license_id.value,\n      e.target.professional_title.value,\n      e.target.phone_number.value\n    );\n    errorMessage ? setSignupErrorMessage(errorMessage) : setSignupErrorMessage('');\n    e.target.reset();\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <Form onSubmit={e => handleSignupSubmit(e)} className=\"form-width\">\n        <Form.Group>\n          <h3 style={{paddingTop: \"20px\", fontFamily: \"Cinzel\"}}>General Information</h3>\n          <Form.Control type=\"text\" placeholder=\"Profesional Title e.g. Doctor\" name=\"professional_title\"/>\n          <Form.Control type=\"text\" placeholder=\"First and Last Name\" name=\"name\"/>  \n          <Form.Control type=\"text\" placeholder=\"Email\" name=\"email\"/>\n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\n          <Form.Control type=\"text\" placeholder=\"Phone Number\" name=\"phone_number\"/>\n          <h3 style={{paddingTop: \"20px\", fontFamily: \"Cinzel\"}}>Address Information</h3>\n          <Form.Control type=\"text\" placeholder=\"Address 1\" name=\"address_1\"/>\n          <Form.Control type=\"text\" placeholder=\"Address 2 (Optional)\" name=\"address_2\"/>\n          <Form.Control type=\"text\" placeholder=\"City\" name=\"city\"/>\n          <Form.Control type=\"text\" placeholder=\"State\" name=\"state\"/>\n          <Form.Control type=\"text\" placeholder=\"Zipcode\" name=\"zipcode\"/>\n          <h3 style={{paddingTop: \"20px\", fontFamily: \"Cinzel\"}}>License Information</h3>\n          <Form.Control type=\"text\" placeholder=\"License ID\" name=\"license_id\"/>\n          <br></br>\n          <Button type=\"submit\">Signup</Button>\n        </Form.Group>\n      </Form>\n      <h6>Already a User? <NavLink to=\"/\">Login</NavLink></h6>\n    </div>\n  )\n}\n\nexport default Signup","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js",["108"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {connect, useDispatch} from 'react-redux';\nimport {Button, Modal, Alert } from 'react-bootstrap';\nimport { API_ROOT} from '../apiRoot'\n\n\n\nconst OrderView = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [lgShow, setLgShow] = useState(false);\n\n  \n  const orderClick = () => {\n      createDoctorOrder();\n      alert(\"Your order has been sent.  Please check the registered email for this account to finish Docusign signature\");\n      dispatch({ type: 'SELECT_SAMPLE', selectedSample: null })\n      props.resetQuantity();\n      history.push(\"/YourDoses\");\n    }\n\n  const createDoctorOrder = () => {    \n    let token = localStorage.getItem('auth_token')\n    \n    const doctor_order= {\n      quantity: props.quantity,\n      sample_id: props.selectedSample.id,\n    }\n    \n    fetch (`${API_ROOT}/doctor_orders`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n         Accept: \"application/json\",\n         'Auth-Token': token\n      },\n      body: JSON.stringify(\n        doctor_order\n      )\n    })\n      .then(resp => resp.json())\n      .then((newOrder) => {\n        console.log(newOrder)\n        props.renderNewDocOrder(newOrder);\n        \n      })\n  }\n\n  const handleSelect = e => {\n    let value = e.target.value\n    props.selectQuantity(value)\n  }\n\n  const {professional_title, address_1, address_2, name, city, state, zipcode} = props.user\n\n  return (\n  <div className=\"order-form-container\">\n      <Button variant=\"primary\" className=\"btn-primary\" id=\"place-order-button\" onClick={() => setLgShow(true)}>Place Order</Button>\n     <Modal\n        size=\"lg\"\n        show={lgShow}\n        onHide={() => setLgShow(false)}\n        aria-labelledby=\"modal-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"modal-title\">\n            Order Form\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h5>Order will be sent to: </h5>\n          <div className=\"modal-doc-info\"></div>\n            {professional_title} {name}\n            <br></br>\n            {address_1}\n            <br></br>\n            {address_2}\n            <br></br>\n            {city} {state}, {zipcode}\n          <div className=\"modal-quantity-select\">\n          <select name=\"quantity\" onChange={handleSelect}>\n            <option value=\"none\" > \n              Select Quantity\n            </option> \n            <option value=\"1\">1 order of {props.selectedSample.sample_size} sample</option>\n            <option value=\"2\">2 orders of {props.selectedSample.sample_size} sample</option>\n            <option value=\"3\">3 orders of {props.selectedSample.sample_size} sample</option>\n          </select>\n          </div>\n      <br></br>\n      <Button onClick={() => orderClick()} disabled={!props.quantity}>Submit Order</Button>\n        </Modal.Body>\n      </Modal>\n      {/* <Alert\n        show={showDangerAlert}\n        variant=\"danger\"\n        className=\"w-25 mt-3 ml-3\"\n      >\n       Order Failed to Create\n      </Alert>\n      <Alert\n        show={showSuccessAlert}\n        variant=\"success\"\n        className=\"w-25 mt-3 ml-3 \"\n      >\n        Successfully Ordered!  Please check your email to continue signing\n      </Alert> */}\n  </div>\n  )\n}\n\nconst msp = state => {\n  return {\n    user: state.user,\n    selectedSample: state.selectedSample,\n    quantity: state.quantity\n  }\n}\nconst mdp = dispatch => {\n  return {\n    renderNewDocOrder: (newOrder) => dispatch({type:\"RENDER_NEW_DOCTOR_ORDER\", newOrder:newOrder}),\n    selectQuantity: (value) => dispatch({type:\"SELECT_QUANTITY\", value:value}),\n    resetQuantity: () => dispatch({type:\"RESET_QUANTITY\"}),\n  }\n}\n\nexport default connect(msp,mdp)(OrderView) ","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/context/AuthProvider.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Logout.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/auth/useAuth.js",["109"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/apiRoot.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/YourDoses.js",["110"],"import {React, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport ShippingLabel from '../containers/ShippingLabel';\nimport ShippingTracker from '../containers/ShippingTracker';\nimport { Row, Col } from 'react-bootstrap'\nimport { API_ROOT } from '../apiRoot'\nimport ContractsTable from \"./ContractsTable\";\nimport ContactFooter from \"../containers/ContactFooter\"\n\nconst YourDoses = (props) => {\n  \n  useEffect(() => fetchUserOrders(), []);\n  //Change to check for use in props\n  const token = localStorage.getItem('auth_token')\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n\n    const fetchUserOrders = () => {\n      fetch (`${API_ROOT}/doctor_orders/return_doctors_orders`, fetchObj)\n      .then(resp => resp.json())\n      .then((doctorOrders) => {\n        props.renderDocOrders(doctorOrders)});\n    }\n\n  return(\n    <div className=\"your-doses-page\">\n      <div className=\"yourdose-contract-frame\">\n        <div className=\"yourdose-explain-container\">\n          <div id=\"yourdose-explain-header\" className=\"grow-text aura-pulse\">\n            Check\n          </div>\n          <div id=\"yourdose-explain-firstline\">\n            the status of your contract.\n          </div>\n          <div id=\"yourdose-explain-body\">\n            First Dose Fulfillment uses Hellosign to easily send contracts right to your email.  Once you sign, your first dose is on the way.  Keep track with the table below.\n          </div>\n        </div>\n        <div className='contracts-table-scrollable-container'>\n          <ContractsTable/>\n        </div>\n        <br></br>\n      </div>\n      <div className=\"yourdose-shipping-frame\">\n        <Row id style={{ display: \"flex\", textAlign: \"center\" }}>\n          <Col className=\"column-shipping\" id=\"shipping-col-left\">\n            <div className=\"shipping-explain-container\">\n              <div id=\"shipping-explain-header\" className=\"grow-text aura-pulse\">\n                Track\n              </div>\n              <div id=\"shipping-explain-firstline\">\n                your First Dose order.\n              </div>\n              <div id=\"shipping-explain-body\">\n                First Dose uses ShipStation to provide up-to-date information on your current orders. Click on an order below to see its status.\n              </div>\n            </div>\n            <div className=\"shipping-info-data\">\n              <ShippingTracker/> \n            </div>\n          </Col>\n          <Col className=\"column-shipping\" id=\"shipping-col-right\">\n            <div id=\"shipping-text-container\">\n              {props.selectedOrder ? <ShippingLabel/> : <div id=\"please-select-shipping-order\" className=\"grow-text\">Please Select a Shipping Order</div>}\n            </div>\n          </Col>\n        </Row>\n        <br></br>\n      </div>\n      <br></br>\n      <ContactFooter/>\n    </div>\n  )\n}\n\nconst msp = state => {\n  return {\n    doctorOrders: state.doctorOrders,\n    user: state.user,\n    selectedOrder: state.selectedOrder\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderDocOrders: (doctorOrders) => dispatch({type:\"GET_DOCTOR_ORDERS\", doctorOrders:doctorOrders})\n  }\n}\n\nexport default connect(msp,mdp)(YourDoses)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/HomeContainer.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/ShippingLabel.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/ShippingTracker.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/ContractsTable.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/FirstDoses.js",["111"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/ContactFooter.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":15,"nodeType":"118","messageId":"119","endLine":2,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":9,"column":40,"nodeType":"122","endLine":9,"endColumn":42,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":9,"column":10,"nodeType":"118","messageId":"119","endLine":9,"endColumn":28},{"ruleId":"116","severity":1,"message":"125","line":4,"column":24,"nodeType":"118","messageId":"119","endLine":4,"endColumn":29},{"ruleId":"120","severity":1,"message":"126","line":136,"column":6,"nodeType":"122","endLine":136,"endColumn":8,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"121","line":12,"column":38,"nodeType":"122","endLine":12,"endColumn":40,"suggestions":"128"},{"ruleId":"120","severity":1,"message":"129","line":18,"column":35,"nodeType":"122","endLine":18,"endColumn":37,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUserOrders'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'signupErrorMessage' is assigned a value but never used.","'Alert' is defined but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["134"],["135"],"React Hook useEffect has a missing dependency: 'fetchSamples'. Either include it or remove the dependency array.",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"137","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [fetchUserOrders]",{"range":"144","text":"145"},"Update the dependencies array to be: [dispatch]",{"range":"146","text":"147"},{"range":"148","text":"145"},"Update the dependencies array to be: [fetchSamples]",{"range":"149","text":"150"},[267,269],"[fetchUserOrders]",[3920,3922],"[dispatch]",[452,454],[498,500],"[fetchSamples]"]