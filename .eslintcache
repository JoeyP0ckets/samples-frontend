[{"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js":"1","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js":"2","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js":"3","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js":"4","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js":"5","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js":"6","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js":"7","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js":"8","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js":"9","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js":"10","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js":"11","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js":"12","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js":"13","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js":"14","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js":"15"},{"size":773,"mtime":1609806219160,"results":"16","hashOfConfig":"17"},{"size":223,"mtime":1634657825963,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607442902563,"results":"19","hashOfConfig":"17"},{"size":880,"mtime":1634657825998,"results":"20","hashOfConfig":"17"},{"size":1419,"mtime":1634657825971,"results":"21","hashOfConfig":"17"},{"size":1396,"mtime":1616375540779,"results":"22","hashOfConfig":"17"},{"size":1309,"mtime":1634657825964,"results":"23","hashOfConfig":"17"},{"size":631,"mtime":1616375540778,"results":"24","hashOfConfig":"17"},{"size":859,"mtime":1616375540782,"results":"25","hashOfConfig":"17"},{"size":1722,"mtime":1634657825968,"results":"26","hashOfConfig":"17"},{"size":733,"mtime":1616375540782,"results":"27","hashOfConfig":"17"},{"size":523,"mtime":1634657825992,"results":"28","hashOfConfig":"17"},{"size":577,"mtime":1634657825983,"results":"29","hashOfConfig":"17"},{"size":2509,"mtime":1634657825978,"results":"30","hashOfConfig":"17"},{"size":3999,"mtime":1634657825989,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"yjpb4k",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js",[],["68","69"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js",["70"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport SampleCard from '../containers/SampleCard'\nimport { Row, Col } from 'react-bootstrap'\nimport SampleView from '../containers/SampleView'\n\nclass Samples extends React.Component {\n  \n  componentDidMount() {\n    this.fetchSamples();\n  }\n\n  fetchSamples = () => {\n    fetch ('http://localhost:3000/api/v1/samples')\n    .then(resp => resp.json())\n    .then(allSamples => this.props.renderSamples(allSamples))\n  }\n\n  renderAllSamples = () => {\n    return this.props.allSamples.map((sample, index) =>\n      <SampleCard\n        key={index}\n        sample={sample}\n      />\n    )\n  }\n  \n  render() {\n    return(\n      <Row>\n        <Col className=\"card-column\" md=\"auto\">\n          <div className=\"samples-container\">\n            {this.props.allSamples ? this.renderAllSamples() : \"samples deleted from state\"}\n          </div>\n        </Col>\n        <Col className=\"sample-column\">\n          <div className=\"sample-view\">          \n            {this.props.selectedSample ? <SampleView/> : <h1>Please Select a Sample</h1>}\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nconst msp = state => {\n  return {\n    allSamples: state.allSamples,\n    selectedSample: state.selectedSample\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderSamples: (allSamples) => dispatch({ type: \"GET_ALL_SAMPLES\", allSamples: allSamples})\n  }\n}\n\nexport default connect(msp,mdp)(Samples)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js",["71"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport UserSample from '../containers/UserSamples'\nimport {Row, Col} from 'react-bootstrap'\n\n\nconst Home = props => {\n  useEffect(() => fetchUser(), []);\n\n  const fetchUser = () => {\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n    fetch(`http://localhost:3000/api/v1/doctors/showdoctor`, fetchObj)\n    .then(resp => resp.json())\n    .then(user => props.loginUser(user))\n  }\n  \n  return(\n    <div className=\"home-main\">\n      <h2>Welcome, Dr. {props.user ? props.user.name : null}</h2>\n      <Row>\n        <Col className=\"user-samples-main\">\n          <h3>Click on a past sample for tracking information</h3>\n          {props.user ? <UserSample/> : \"No First Doses\"}\n        </Col>\n        <Col className=\"user-info-main\">\n          I'm the second column foolish human.\n        </Col>\n      </Row>\n    </div>\n    \n  )\n}\n\nconst msp = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mdp = (dispatch) => {\n  return {\n    loginUser: (user) => dispatch({type:\"LOGIN_USER\", user:user})\n  }\n}\n\nexport default connect(msp, mdp)(Home)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js",["72","73"],"import React, { useState } from \"react\"\nimport { Form, Button } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\n\nconst Login = (props) => {\n  const [loginErrorMessage, setLoginErrorMessage] = useState(undefined)\n\n  const handleLoginSubmit = e => {\n    e.preventDefault()\n    const doctor = {\n      doctor: {\n        name: e.target.name.value,\n        password: e.target.password.value\n      }\n    }\n    fetch (`http://localhost:3000/api/v1/sessions`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(doctor)\n    })\n      .then(resp => resp.json())\n      .then((data) => {\n        console.log(data.doctor)\n        if (data.token) {\n          localStorage.setItem('auth_token', data.token)\n          props.loginUser(data.doctor)\n          setLoginErrorMessage(undefined)\n        } else {\n          localStorage.removeItem('auth_token')\n          setLoginErrorMessage(data.message)\n        }\n      })\n      .catch(() => {\n        localStorage.removeItem('auth_token')\n        setLoginErrorMessage('Something went wrong')\n      })\n      e.target.reset()\n  }\n  \n    return(\n      <Form onSubmit={e => handleLoginSubmit(e)}>\n        <Form.Group>\n          <Form.Control type=\"text\" placeholder=\"Name\" name=\"name\"/>  \n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\n          {loginErrorMessage && <p style={{color: 'red'}}>{loginErrorMessage}</p>}\n          <br></br>\n          <Button type=\"submit\">Login</Button>\n        </Form.Group>\n      </Form>\n  )\n}\n\nconst mdp = dispatch => {\n  return {\n    loginUser: (doctor) => dispatch({type:\"LOGIN_USER\", user:doctor})\n  }\n}\n\nexport default connect(null,mdp)(Login)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js",["74"],"import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\n\n \nconst UserSample = (props) => {\n    useEffect(() => fetchUserOrders(), []);\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n\n    const fetchUserOrders = () => {\n      fetch ('http://localhost:3000/api/v1/doctor_orders/return_doctors_orders', fetchObj)\n      .then(resp => resp.json())\n      .then((doc_orders) => props.renderDocOrders(doc_orders))\n    }\n\n    const displayOrders = () => {\n      return (\n        <ul>\n          {props.doctorOrders.map((order, index) => (\n          <li key={index}>{order.sample.sample_name}, {order.status}</li>\n          ))}\n        </ul>\n      )\n    }\n    \n\n  return (\n    <div className=\"user-samples-container\">\n      {props.doctorOrders ? displayOrders() : \"No orders to show\"}\n    </div>\n  )\n}\n\nconst msp = state => {\n  return {\n    doctorOrders: state.doctorOrders,\n    user: state.user\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderDocOrders: (doctorOrders) => dispatch({type:\"GET_DOCTOR_ORDERS\", doctorOrders:doctorOrders})\n  }\n}\n\nexport default connect(msp,mdp)(UserSample)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js",["75","76","77"],"import React from \"react\"\nimport { Form, Button} from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nconst Signup = (props) => {\n\n  const handleSignupSubmit = e => {\n    e.preventDefault()\n    const doctor = {\n      name: e.target.name.value,\n      password: e.target.password.value,\n      email: e.target.email.value,\n      address_1: e.target.address_1.value,\n      address_2: e.target.address_2.value,\n      city: e.target.city.value,\n      state: e.target.state.value,\n      zipcode: e.target.zipcode.value,\n      license_id: e.target.license_id.value,\n      signature: e.target.signature.value,\n      professional_title: e.target.professional_title.value,\n      phone_number: e.target.phone_number.value\n    }\n    console.log(doctor)\n    fetch (`http://localhost:3000/api/v1/doctors`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n         Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        doctor\n      })\n    })\n      .then(resp => resp.json())\n      .then((user) => {\n        props.loginUser(user)\n      })\n      e.target.reset()\n  }\n  \n\n  return (\n    <Form onSubmit={e => handleSignupSubmit(e)}>\n       <Form.Group>\n         General Information\n        <Form.Control type=\"text\" placeholder=\"Profesional Title\" name=\"professional_title\"/>\n        <Form.Control type=\"text\" placeholder=\"Name\" name=\"name\"/>  \n        <Form.Control type=\"text\" placeholder=\"Email\" name=\"email\"/>\n        <Form.Control type=\"text\" placeholder=\"Password\" name=\"password\"/>\n        <Form.Control type=\"text\" placeholder=\"Phone Number\" name=\"phone_number\"/>\n        <br></br>\n          Address Information\n        <Form.Control type=\"text\" placeholder=\"Address 1\" name=\"address_1\"/>\n        <Form.Control type=\"text\" placeholder=\"Address 2\" name=\"address_2\"/>\n        <Form.Control type=\"text\" placeholder=\"City\" name=\"city\"/>\n        <Form.Control type=\"text\" placeholder=\"State\" name=\"state\"/>\n        <Form.Control type=\"text\" placeholder=\"Zipcode\" name=\"zipcode\"/>\n        <br></br>\n          Licensing Information\n        <Form.Control type=\"text\" placeholder=\"License ID\" name=\"license_id\"/>\n          Signature\n        <Form.Control type=\"text\" placeholder=\"Signature\" name=\"signature\"/>\n        <br></br>   \n        <Button type=\"submit\">Signup</Button>\n       </Form.Group>\n    </Form>\n  )\n}\n\nconst mdp = dispatch => {\n  return{\n    loginUser: (user) => dispatch({type:\"LOGIN_USER\", user:user})\n  }\n}\n\nexport default connect(null,mdp)(Signup)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":9,"column":35,"nodeType":"84","endLine":9,"endColumn":37,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":12,"column":32,"nodeType":"84","endLine":12,"endColumn":34,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":8,"column":10,"nodeType":"90","messageId":"91","endLine":8,"endColumn":27},{"ruleId":"88","severity":1,"message":"92","line":9,"column":22,"nodeType":"90","messageId":"91","endLine":9,"endColumn":32},{"ruleId":"82","severity":1,"message":"93","line":6,"column":40,"nodeType":"84","endLine":6,"endColumn":42,"suggestions":"94"},{"ruleId":"88","severity":1,"message":"95","line":1,"column":26,"nodeType":"90","messageId":"91","endLine":1,"endColumn":37},{"ruleId":"88","severity":1,"message":"96","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":17},{"ruleId":"88","severity":1,"message":"97","line":9,"column":10,"nodeType":"90","messageId":"91","endLine":9,"endColumn":28},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSamples'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["101"],"no-unused-vars","'loginErrorMessage' is assigned a value but never used.","Identifier","unusedVar","'logoutUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserOrders'. Either include it or remove the dependency array.",["102"],"'useDispatch' is defined but never used.","'connect' is defined but never used.","'signupErrorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [fetchSamples]",{"range":"109","text":"110"},"Update the dependencies array to be: [fetchUser]",{"range":"111","text":"112"},"Update the dependencies array to be: [fetchUserOrders]",{"range":"113","text":"114"},[286,288],"[fetchSamples]",[393,395],"[fetchUser]",[153,155],"[fetchUserOrders]"]