[{"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js":"1","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js":"2","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js":"3","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js":"4","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js":"5","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js":"6","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js":"7","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js":"8","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js":"9","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js":"10","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js":"11","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js":"12","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js":"13","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js":"14","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js":"15","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveAuthCode.js":"16","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveUserInfo.js":"17","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CreateEnvelope.js":"18","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Logout.js":"19","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/DocusignAuth.js":"20","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/DeleteDocusignToken.js":"21","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/auth/AdminHome.js":"22","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CheckStatusInterval.js":"23","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/SendOrdersInterval.js":"24","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/auth/useAuth.js":"25","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/context/AuthProvider.js":"26"},{"size":773,"mtime":1609806219160,"results":"27","hashOfConfig":"28"},{"size":430,"mtime":1634421444572,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1607442902563,"results":"30","hashOfConfig":"28"},{"size":964,"mtime":1634240860857,"results":"31","hashOfConfig":"28"},{"size":1943,"mtime":1634422103216,"results":"32","hashOfConfig":"28"},{"size":1396,"mtime":1616375540779,"results":"33","hashOfConfig":"28"},{"size":1629,"mtime":1634238859346,"results":"34","hashOfConfig":"28"},{"size":631,"mtime":1616375540778,"results":"35","hashOfConfig":"28"},{"size":859,"mtime":1616375540782,"results":"36","hashOfConfig":"28"},{"size":1804,"mtime":1634240037911,"results":"37","hashOfConfig":"28"},{"size":733,"mtime":1616375540782,"results":"38","hashOfConfig":"28"},{"size":1298,"mtime":1633622780909,"results":"39","hashOfConfig":"28"},{"size":582,"mtime":1634238893158,"results":"40","hashOfConfig":"28"},{"size":3317,"mtime":1634420699522,"results":"41","hashOfConfig":"28"},{"size":3114,"mtime":1630520228862,"results":"42","hashOfConfig":"28"},{"size":387,"mtime":1630607003635,"results":"43","hashOfConfig":"28"},{"size":832,"mtime":1625074610046,"results":"44","hashOfConfig":"28"},{"size":259,"mtime":1620154477520,"results":"45","hashOfConfig":"28"},{"size":528,"mtime":1634241520087,"results":"46","hashOfConfig":"28"},{"size":509,"mtime":1633620184136,"results":"47","hashOfConfig":"28"},{"size":287,"mtime":1630613014380,"results":"48","hashOfConfig":"28"},{"size":146,"mtime":1633375248913,"results":"49","hashOfConfig":"28"},{"size":753,"mtime":1633620130884,"results":"50","hashOfConfig":"28"},{"size":592,"mtime":1633620152047,"results":"51","hashOfConfig":"28"},{"size":2112,"mtime":1634422027628,"results":"52","hashOfConfig":"28"},{"size":518,"mtime":1634238760190,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"yjpb4k",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js",[],["117","118"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js",["119"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js",["120"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport SampleCard from '../containers/SampleCard'\nimport { Row, Col } from 'react-bootstrap'\nimport SampleView from '../containers/SampleView'\n\nclass Samples extends React.Component {\n  \n  componentDidMount() {\n    this.fetchSamples();\n  }\n\n  fetchSamples = () => {\n    fetch ('http://localhost:3000/api/v1/samples')\n    .then(resp => resp.json())\n    .then(allSamples => this.props.renderSamples(allSamples))\n  }\n\n  renderAllSamples = () => {\n    return this.props.allSamples.map((sample, index) =>\n      <SampleCard\n        key={index}\n        sample={sample}\n      />\n    )\n  }\n  \n  render() {\n    return(\n      <Row>\n        <Col className=\"card-column\" md=\"auto\">\n          <div className=\"samples-container\">\n            {this.props.allSamples ? this.renderAllSamples() : \"samples deleted from state\"}\n          </div>\n        </Col>\n        <Col className=\"sample-column\">\n          <div className=\"sample-view\">          \n            {this.props.selectedSample ? <SampleView/> : <h1>Please Select a Sample</h1>}\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nconst msp = state => {\n  return {\n    allSamples: state.allSamples,\n    selectedSample: state.selectedSample\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderSamples: (allSamples) => dispatch({ type: \"GET_ALL_SAMPLES\", allSamples: allSamples})\n  }\n}\n\nexport default connect(msp,mdp)(Samples)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js",["121"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport UserSample from '../containers/UserSamples'\nimport {Row, Col} from 'react-bootstrap'\nimport LoginSignup from '../containers/LoginSignup'\nimport CheckStatusInterval from './CheckStatusInterval'\nimport SendOrdersInterval from './SendOrdersInterval'\n\n\n\n\n\nconst Home = (props) => {\n  useEffect(() => fetchUser(), []);\n\n  const fetchUser = () => {\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n    fetch(`http://localhost:3000/api/v1/doctors/showdoctor`, fetchObj)\n    .then(resp => resp.json())\n    .then(user => props.loginUser(user))\n  }\n  \n  return props.user ? (\n    <div className=\"home-main\">\n      <h2>Welcome, Dr. {props.user ? props.user.name : null}</h2>\n      <Row>\n        <Col className=\"user-samples-main\">\n          <h3>Click on a past sample for tracking information</h3>\n          {props.user.samples ? <UserSample/> : \"No First Doses\"}\n        </Col>\n        <Col className=\"user-info-main\">\n          <a href=\"https://local.fedex.com/en-us/track/\">Click here to track package</a>\n          <CheckStatusInterval/>\n          <SendOrdersInterval/>\n        </Col>\n      </Row>\n    </div>\n  ) :\n  (\n    <LoginSignup/>\n  )\n}\n\nconst msp = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mdp = (dispatch) => {\n  return {\n    loginUser: (user) => dispatch({type:\"LOGIN_USER\", user:user})\n  }\n}\n\nexport default connect(msp, mdp)(Home)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js",["122"],"import React, { useContext, useState } from \"react\"\nimport { AuthContext }from '../context/AuthProvider'\nimport { Form, Button } from \"react-bootstrap\"\n\n\nconst Login = () => {\n  \n  const [loginErrorMessage, setLoginErrorMessage] = useState(undefined)\n  const { loginUser, logoutUser} = useContext(AuthContext);\n\n  const handleLoginSubmit = e => {\n    e.preventDefault()\n    const errorMessage = loginUser(e.target.name.value, e.target.password.value);\n    errorMessage ? setLoginErrorMessage(errorMessage) : setLoginErrorMessage('');\n    e.target.reset();\n  }\n  \n    return(\n      <Form onSubmit={e => handleLoginSubmit(e)}>\n        <Form.Group>\n          <Form.Control type=\"text\" placeholder=\"Name\" name=\"name\"/>  \n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\n          {loginErrorMessage && <p style={{color: 'red'}}>{loginErrorMessage}</p>}\n          <br></br>\n          <Button type=\"submit\">Login</Button>\n        </Form.Group>\n      </Form>\n  )\n}\n\nexport default Login\n\n// fetch (`http://localhost:3000/api/v1/sessions`, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify(doctor)\n//     })\n//       .then(resp => resp.json())\n//       .then((data) => {\n        // if (data.token) {\n        //   setAuthToken(data.token)\n        //   props.loginUser(data.doctor)\n        //   setLoginErrorMessage(undefined)\n        // } else {\n        //   localStorage.removeItem('auth_token')\n        //   setLoginErrorMessage(data.message)\n        // }\n      //   props.loginUser();\n      // })\n      // .catch(() => {\n        // localStorage.removeItem('auth_token')\n        // setLoginErrorMessage('Something went wrong')\n      //   props.logouUser();\n      // })\n      // e.target.reset()","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js",["123"],"import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\n\n \nconst UserSample = (props) => {\n    useEffect(() => fetchUserOrders(), []);\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n\n    const fetchUserOrders = () => {\n      fetch ('http://localhost:3000/api/v1/doctor_orders/return_doctors_orders', fetchObj)\n      .then(resp => resp.json())\n      .then((doc_orders) => props.renderDocOrders(doc_orders))\n    }\n\n    const displayOrders = () => {\n      return (\n        <ul>\n          {props.doctorOrders.map((order, index) => (\n          <li key={index}>{order.sample.sample_name}, {order.status}</li>\n          ))}\n        </ul>\n      )\n    }\n    \n\n  return (\n    <div className=\"user-samples-container\">\n      {props.doctorOrders ? displayOrders() : \"No orders to show\"}\n    </div>\n  )\n}\n\nconst msp = state => {\n  return {\n    doctorOrders: state.doctorOrders,\n    user: state.user\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderDocOrders: (doctorOrders) => dispatch({type:\"GET_DOCTOR_ORDERS\", doctorOrders:doctorOrders})\n  }\n}\n\nexport default connect(msp,mdp)(UserSample)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js",["124","125"],"import React, {useState, useDispatch } from \"react\"\nimport { Form, Button} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { AuthContext }from '../context/AuthProvider'\n\n\nconst Signup = (props) => {\n  \n  const [signupErrorMessage, setSignupErrorMessage] = useState(undefined)\n  \n  const handleSignupSubmit = e => {\n    e.preventDefault()\n    \n    const doctor = {\n      name: e.target.name.value,\n      password: e.target.password.value,\n      email: e.target.email.value,\n      address_1: e.target.address_1.value,\n      address_2: e.target.address_2.value,\n      city: e.target.city.value,\n      state: e.target.state.value,\n      zipcode: e.target.zipcode.value,\n      license_id: e.target.license_id.value,\n      professional_title: e.target.professional_title.value,\n      phone_number: e.target.phone_number.value\n    }\n    fetch (`http://localhost:3000/api/v1/doctors`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n         Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        doctor\n      })\n    })\n      .then(resp => resp.json())\n      .then((data) => {\n        if (data.token) {\n          // setAuthToken(data.token)\n          // props.loginUser(data.doctor)\n          // setSignupErrorMessage(undefined)\n          props.loginUser();\n        } else {\n          // localStorage.removeItem('auth_token')\n          // setSignupErrorMessage(data.errors)\n          props.logoutUser();\n        }\n      })\n      .catch(() => {\n        localStorage.removeItem('auth_token')\n        setSignupErrorMessage('Something went wrong')\n      })\n      e.target.reset()\n  }\n\n  const displayErrorMessages = () => {\n    return (\n      <ul>\n        {signupErrorMessage.map((error, index) => (\n        <li key={index}>{error}</li>\n        ))}\n      </ul>\n    )\n  }\n  \n\n  return (\n    <Form onSubmit={e => handleSignupSubmit(e)}>\n       <Form.Group>\n         General Information\n        <Form.Control type=\"text\" placeholder=\"Profesional Title e.g. Doctor\" name=\"professional_title\"/>\n        <Form.Control type=\"text\" placeholder=\"First and Last Name\" name=\"name\"/>  \n        <Form.Control type=\"text\" placeholder=\"Email\" name=\"email\"/>\n        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\n        <Form.Control type=\"text\" placeholder=\"Phone Number\" name=\"phone_number\"/>\n        <br></br>\n          Address Information\n        <Form.Control type=\"text\" placeholder=\"Address 1\" name=\"address_1\"/>\n        <Form.Control type=\"text\" placeholder=\"Address 2 (Optional)\" name=\"address_2\"/>\n        <Form.Control type=\"text\" placeholder=\"City\" name=\"city\"/>\n        <Form.Control type=\"text\" placeholder=\"State\" name=\"state\"/>\n        <Form.Control type=\"text\" placeholder=\"Zipcode\" name=\"zipcode\"/>\n        <br></br>\n          Licensing Information\n        <Form.Control type=\"text\" placeholder=\"License ID\" name=\"license_id\"/>\n        <br></br>\n        <div className=\"signup-error-container\">\n          {signupErrorMessage ? displayErrorMessages() : null}\n        </div>\n        <br></br>\n        <Button type=\"submit\">Signup</Button>\n       </Form.Group>\n    </Form>\n  )\n}\n\nconst mdp = dispatch => {\n  return{\n    loginUser: (user) => dispatch({type:\"LOGIN_USER\", user:user})\n  }\n}\n\nexport default connect(null,mdp)(Signup)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveAuthCode.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveUserInfo.js",["126","127"],"import React from \"react\"\nimport { useHistory } from 'react-router-dom'\n\n\nconst RetrieveUserInfo = () => {\n  const history = useHistory();\n  const access_token = localStorage.getItem('docusign_access_token')\n\n  const fetchUser = React.useCallback(() => {\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n      body: JSON.stringify({access_token: access_token })\n    }\n\n    fetch(`http://localhost:3000/api/v1/docusign/retrieve_user_info`, fetchObj)\n    .then(resp => resp.json())\n    .then(resp => console.log(resp))\n  }, [])\n\n   React.useEffect(fetchUser, [])\n  \n      history.push(\"/\");\n      return null;\n    }\n\n\nexport default RetrieveUserInfo","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CreateEnvelope.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Logout.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/DocusignAuth.js",[],["128","129"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/DeleteDocusignToken.js",[],["130","131"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/auth/AdminHome.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CheckStatusInterval.js",["132"],"import { useEffect } from \"react\"\n\nconst CheckStatusInterval = () => {\n  \n  \n    const access_token = localStorage.getItem('docusign_access_token')\n    const token = localStorage.getItem('auth_token')\n\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        const fetchObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Auth-Token': token\n          },\n          body: JSON.stringify({access_token: access_token })\n        }\n    \n        fetch(`http://localhost:3000/api/v1/docusign/check_envelope_status`, fetchObj)\n        return null;\n      }, 60000);\n      return () => clearInterval(interval)\n    }, []);\n\n  return(\n    null\n  )\n}\n\nexport default CheckStatusInterval","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/SendOrdersInterval.js",["133"],"import { useEffect } from \"react\"\n\nconst SendOrdersInterval = () => {\n  \n  const token = localStorage.getItem('auth_token')\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      const fetchObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Auth-Token': token\n        }\n      }\n  \n      fetch(`http://localhost:3000/api/v1/doctor_orders/send_warehouse_emails`, fetchObj)\n      return null;\n    }, 60000);\n    return () => clearInterval(interval)\n  }, []);\n\n  \n  return (\n    null\n  )\n}\n\nexport default SendOrdersInterval","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/auth/useAuth.js",["134"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/context/AuthProvider.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":12,"column":8,"nodeType":"141","messageId":"142","endLine":12,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":9,"column":35,"nodeType":"145","endLine":9,"endColumn":37,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":14,"column":32,"nodeType":"145","endLine":14,"endColumn":34,"suggestions":"148"},{"ruleId":"139","severity":1,"message":"149","line":9,"column":22,"nodeType":"141","messageId":"142","endLine":9,"endColumn":32},{"ruleId":"143","severity":1,"message":"150","line":6,"column":40,"nodeType":"145","endLine":6,"endColumn":42,"suggestions":"151"},{"ruleId":"139","severity":1,"message":"152","line":1,"column":26,"nodeType":"141","messageId":"142","endLine":1,"endColumn":37},{"ruleId":"139","severity":1,"message":"153","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":21},{"ruleId":"143","severity":1,"message":"154","line":28,"column":6,"nodeType":"145","endLine":28,"endColumn":8,"suggestions":"155"},{"ruleId":"143","severity":1,"message":"147","line":30,"column":4,"nodeType":"156","endLine":30,"endColumn":19,"suggestions":"157"},{"ruleId":"135","replacedBy":"158"},{"ruleId":"137","replacedBy":"159"},{"ruleId":"135","replacedBy":"160"},{"ruleId":"137","replacedBy":"161"},{"ruleId":"143","severity":1,"message":"162","line":25,"column":8,"nodeType":"145","endLine":25,"endColumn":10,"suggestions":"163"},{"ruleId":"143","severity":1,"message":"164","line":21,"column":6,"nodeType":"145","endLine":21,"endColumn":8,"suggestions":"165"},{"ruleId":"143","severity":1,"message":"166","line":54,"column":6,"nodeType":"145","endLine":54,"endColumn":8,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'LoginSignup' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSamples'. Either include it or remove the dependency array.","ArrayExpression",["170"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["171"],"'logoutUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserOrders'. Either include it or remove the dependency array.",["172"],"'useDispatch' is defined but never used.","'AuthContext' is defined but never used.","React Hook React.useCallback has a missing dependency: 'access_token'. Either include it or remove the dependency array.",["173"],"MemberExpression",["174"],["168"],["169"],["168"],["169"],"React Hook useEffect has missing dependencies: 'access_token' and 'token'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["176"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"180","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [fetchSamples]",{"range":"193","text":"194"},"Update the dependencies array to be: [fetchUser]",{"range":"195","text":"196"},"Update the dependencies array to be: [fetchUserOrders]",{"range":"197","text":"198"},"Update the dependencies array to be: [access_token]",{"range":"199","text":"200"},{"range":"201","text":"196"},"Update the dependencies array to be: [access_token, token]",{"range":"202","text":"203"},"Update the dependencies array to be: [token]",{"range":"204","text":"205"},"Update the dependencies array to be: [dispatch]",{"range":"206","text":"207"},[286,288],"[fetchSamples]",[395,397],"[fetchUser]",[153,155],"[fetchUserOrders]",[707,709],"[access_token]",[742,744],[687,689],"[access_token, token]",[523,525],"[token]",[1717,1719],"[dispatch]"]