[{"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js":"1","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js":"2","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js":"3","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js":"4","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js":"5","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js":"6","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js":"7","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js":"8","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js":"9","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js":"10","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js":"11","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js":"12","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js":"13","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js":"14","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js":"15","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/context/AuthProvider.js":"16","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveAuthCode.js":"17","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveUserInfo.js":"18","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CreateEnvelope.js":"19","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Logout.js":"20","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/auth/useAuth.js":"21","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CheckStatusInterval.js":"22","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/SendOrdersInterval.js":"23"},{"size":773,"mtime":1609806219160,"results":"24","hashOfConfig":"25"},{"size":430,"mtime":1642620332840,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1607442902563,"results":"27","hashOfConfig":"25"},{"size":964,"mtime":1637015447028,"results":"28","hashOfConfig":"25"},{"size":2213,"mtime":1642620332846,"results":"29","hashOfConfig":"25"},{"size":1396,"mtime":1642620332850,"results":"30","hashOfConfig":"25"},{"size":1699,"mtime":1642620332844,"results":"31","hashOfConfig":"25"},{"size":631,"mtime":1616375540778,"results":"32","hashOfConfig":"25"},{"size":859,"mtime":1642620332858,"results":"33","hashOfConfig":"25"},{"size":1001,"mtime":1634671736791,"results":"34","hashOfConfig":"25"},{"size":733,"mtime":1642620332859,"results":"35","hashOfConfig":"25"},{"size":1298,"mtime":1642620332860,"results":"36","hashOfConfig":"25"},{"size":339,"mtime":1642620332854,"results":"37","hashOfConfig":"25"},{"size":2506,"mtime":1642620332852,"results":"38","hashOfConfig":"25"},{"size":3114,"mtime":1642620332856,"results":"39","hashOfConfig":"25"},{"size":558,"mtime":1634657889147,"results":"40","hashOfConfig":"25"},{"size":387,"mtime":1634657889141,"results":"41","hashOfConfig":"25"},{"size":832,"mtime":1642620332848,"results":"42","hashOfConfig":"25"},{"size":259,"mtime":1642620332843,"results":"43","hashOfConfig":"25"},{"size":459,"mtime":1642620332845,"results":"44","hashOfConfig":"25"},{"size":5001,"mtime":1642620332841,"results":"45","hashOfConfig":"25"},{"size":753,"mtime":1642620332842,"results":"46","hashOfConfig":"25"},{"size":592,"mtime":1642620332851,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"yjpb4k",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js",[],["106","107"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js",["108"],"import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport SampleCard from '../containers/SampleCard'\nimport { Row, Col } from 'react-bootstrap'\nimport SampleView from '../containers/SampleView'\n\nconst Samples = (props) =>  {\n  \n  useEffect(() => fetchSamples(), []);\n\n\n  const fetchSamples = () => {\n    fetch ('http://localhost:3000/api/v1/samples')\n    .then(resp => resp.json())\n    .then(allSamples => props.renderSamples(allSamples))\n  }\n\n  const renderAllSamples = () => {\n    return props.allSamples.map((sample, index) =>\n      <SampleCard\n        key={index}\n        sample={sample}\n      />\n    )\n  }\n  \n    return(\n      <Row>\n        <Col className=\"card-column\" md=\"auto\">\n          <div className=\"samples-container\">\n            {props.allSamples ? renderAllSamples() : \"samples deleted from state\"}\n          </div>\n        </Col>\n        <Col className=\"sample-column\">\n          <div className=\"sample-view\">          \n            {props.selectedSample ? <SampleView/> : <h1>Please Select a Sample</h1>}\n          </div>\n        </Col>\n      </Row>\n    )\n}\n\nconst msp = state => {\n  return {\n    allSamples: state.allSamples,\n    selectedSample: state.selectedSample\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderSamples: (allSamples) => dispatch({ type: \"GET_ALL_SAMPLES\", allSamples: allSamples})\n  }\n}\n\nexport default connect(msp,mdp)(Samples)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js",["109"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport UserSample from '../containers/UserSamples'\nimport LoginSignup from '../containers/LoginSignup'\nimport CheckStatusInterval from './CheckStatusInterval'\nimport SendOrdersInterval from './SendOrdersInterval'\nimport { AuthContext }from '../context/AuthProvider'\n\n\n\nconst Home = (props) => {\n  useEffect(() => fetchUser(), []);\n\n  const fetchUser = () => {\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n    fetch(`http://localhost:3000/api/v1/doctors/showdoctor`, fetchObj)\n    .then(resp => resp.json())\n    .then(user => {\n      console.log(user)\n      props.loginUser(user)\n    })\n  }\n  \n  return props.user ? (\n    <div className=\"home-main\">\n       <CheckStatusInterval/>\n       <SendOrdersInterval/>\n      <h2 style={{paddingTop: \"20px\"}}>Welcome, Dr. {props.user ? props.user.name : null}</h2>\n      \n        <div className=\"user-samples-main\">\n          <h3>Click on a past sample for tracking information</h3>\n          {props.user.samples ? <UserSample/> : \"No First Doses\"}\n        \n        \n      </div>\n    </div>\n  ) :\n  (\n    <LoginSignup/>\n  )\n}\n\nconst msp = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mdp = (dispatch) => {\n  return {\n    loginUser: (user) => dispatch({type:\"LOGIN_USER\", user:user})\n  }\n}\n\nexport default connect(msp, mdp)(Home)\n\n{/* <Col className=\"user-info-main\">\n          <a href=\"https://local.fedex.com/en-us/track/\">Click here to track package</a>\n        </Col> */}","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js",["110","111"],"import React, { useContext, useState } from \"react\"\nimport { AuthContext }from '../context/AuthProvider'\nimport { Form, Button } from \"react-bootstrap\"\n\n\nconst Login = () => {\n  \n  const [loginErrorMessage, setLoginErrorMessage] = useState(undefined)\n  const { loginUser, logoutUser} = useContext(AuthContext);\n\n  const handleLoginSubmit = e => {\n    e.preventDefault()\n    const errorMessage = loginUser(e.target.name.value, e.target.password.value);\n    errorMessage ? setLoginErrorMessage(errorMessage) : setLoginErrorMessage('');\n    e.target.reset();\n  }\n  \n    return(\n      <div className=\"login-form\">\n      <Form onSubmit={e => handleLoginSubmit(e)} className=\"form-width\">\n        <Form.Group>\n          <Form.Control type=\"text\" placeholder=\"Name\" name=\"name\"/>  \n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\n          <br></br>\n          <Button type=\"submit\">Login</Button>\n        </Form.Group>\n      </Form>\n      </div>\n  )\n}\n\nexport default Login\n\n","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js",["112"],"import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\n\n \nconst UserSample = (props) => {\n    useEffect(() => fetchUserOrders(), []);\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n\n    const fetchUserOrders = () => {\n      fetch ('http://localhost:3000/api/v1/doctor_orders/return_doctors_orders', fetchObj)\n      .then(resp => resp.json())\n      .then((doc_orders) => props.renderDocOrders(doc_orders))\n    }\n\n    const displayOrders = () => {\n      return (\n        <ul>\n          {props.doctorOrders.map((order, index) => (\n          <li key={index}>{order.sample.sample_name}, {order.status}</li>\n          ))}\n        </ul>\n      )\n    }\n    \n\n  return (\n    <div className=\"user-samples-container\">\n      {props.doctorOrders ? displayOrders() : \"No orders to show\"}\n    </div>\n  )\n}\n\nconst msp = state => {\n  return {\n    doctorOrders: state.doctorOrders,\n    user: state.user\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderDocOrders: (doctorOrders) => dispatch({type:\"GET_DOCTOR_ORDERS\", doctorOrders:doctorOrders})\n  }\n}\n\nexport default connect(msp,mdp)(UserSample)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js",["113","114"],"import React, {useState, useDispatch, useContext } from \"react\"\nimport { Form, Button} from 'react-bootstrap'\nimport { NavLink } from \"react-router-dom\"\nimport { AuthContext }from '../context/AuthProvider'\n\n\nconst Signup = () => {\n  \n  const [signupErrorMessage, setSignupErrorMessage] = useState(undefined)\n  const { signupUser } = useContext(AuthContext);\n  \n  const handleSignupSubmit = e => {\n    e.preventDefault();\n    const errorMessage = signupUser(\n      e.target.name.value, \n      e.target.password.value,\n      e.target.email.value,\n      e.target.address_1.value,\n      e.target.address_2.value,\n      e.target.city.value,\n      e.target.state.value,\n      e.target.zipcode.value,\n      e.target.license_id.value,\n      e.target.professional_title.value,\n      e.target.phone_number.value\n    );\n    errorMessage ? setSignupErrorMessage(errorMessage) : setSignupErrorMessage('');\n    e.target.reset();\n  }\n\n  return (\n    <div className=\"signup-form\">\n      <Form onSubmit={e => handleSignupSubmit(e)} className=\"form-width\">\n        <Form.Group>\n          <h3 style={{paddingTop: \"20px\", fontFamily: \"Cinzel\"}}>General Information</h3>\n          <Form.Control type=\"text\" placeholder=\"Profesional Title e.g. Doctor\" name=\"professional_title\"/>\n          <Form.Control type=\"text\" placeholder=\"First and Last Name\" name=\"name\"/>  \n          <Form.Control type=\"text\" placeholder=\"Email\" name=\"email\"/>\n          <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"/>\n          <Form.Control type=\"text\" placeholder=\"Phone Number\" name=\"phone_number\"/>\n          <h3 style={{paddingTop: \"20px\", fontFamily: \"Cinzel\"}}>Address Information</h3>\n          <Form.Control type=\"text\" placeholder=\"Address 1\" name=\"address_1\"/>\n          <Form.Control type=\"text\" placeholder=\"Address 2 (Optional)\" name=\"address_2\"/>\n          <Form.Control type=\"text\" placeholder=\"City\" name=\"city\"/>\n          <Form.Control type=\"text\" placeholder=\"State\" name=\"state\"/>\n          <Form.Control type=\"text\" placeholder=\"Zipcode\" name=\"zipcode\"/>\n          <h3 style={{paddingTop: \"20px\", fontFamily: \"Cinzel\"}}>License Information</h3>\n          <Form.Control type=\"text\" placeholder=\"License ID\" name=\"license_id\"/>\n          <br></br>\n          <Button type=\"submit\">Signup</Button>\n        </Form.Group>\n      </Form>\n      <h6>Already a User? <NavLink to=\"/\">Login</NavLink></h6>\n    </div>\n  )\n}\n\nexport default Signup","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js",["115","116"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {Button, Modal, } from 'react-bootstrap';\n\n\nconst OrderView = (props) => {\n  const history = useHistory();\n  const [lgShow, setLgShow] = useState(false);\n  \n  const orderClick = () => {\n      createDoctorOrder();\n      props.resetQuantity();\n      alert(\"Your order has been sent.  Please check the email associated with this account to sign for your order.\")\n      history.push(\"/\");\n    }\n\n  const createDoctorOrder = () => {    \n    let accessToken = localStorage.getItem('docusign_access_token')\n    let token = localStorage.getItem('auth_token')\n    const doctor_order= {\n      quantity: props.quantity,\n      sample_id: props.selectedSample.id,\n      token: accessToken\n    }\n    \n    fetch (`http://localhost:3000/api/v1/doctor_orders`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n         Accept: \"application/json\",\n         'Auth-Token': token\n      },\n      body: JSON.stringify(\n        doctor_order\n      )\n    })\n      .then(resp => resp.json())\n      .then((newOrder) => {\n        props.renderNewDocOrder(newOrder)\n      })\n    }\n\n  const handleSelect = e => {\n    let value = e.target.value\n    props.selectQuantity(value)\n  }\n\n  const {professional_title, address_1, address_2, name, city, state, zipcode} = props.user\n\n  return (\n  <div className=\"order-form-container\">\n      <br></br>\n     <Button onClick={() => setLgShow(true)}>Order Sample</Button>\n     <Modal\n        size=\"lg\"\n        show={lgShow}\n        onHide={() => setLgShow(false)}\n        aria-labelledby=\"modal-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"modal-title\">\n            Order Form\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h5>Order will be sent to: </h5>\n          <div className=\"modal-doc-info\"></div>\n            {professional_title} {name}\n            <br></br>\n            {address_1}\n            <br></br>\n            {address_2}\n            <br></br>\n            {city} {state}, {zipcode}\n          <div className=\"modal-quantity-select\">\n          <select name=\"quantity\" onChange={handleSelect}>\n            <option value=\"none\" > \n              Select Quantity\n            </option> \n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select>\n          </div>\n      <br></br>\n      <Button onClick={() => orderClick()} disabled={!props.quantity}>Order Sample</Button>\n        </Modal.Body>\n      </Modal>\n  </div>\n  )\n}\n\nconst msp = state => {\n  return {\n    user: state.user,\n    selectedSample: state.selectedSample,\n    quantity: state.quantity\n  }\n}\nconst mdp = dispatch => {\n  return {\n    renderNewDocOrder: (newOrder) => dispatch({type:\"RENDER_NEW_DOCTOR_ORDER\", newOrder:newOrder}),\n    selectQuantity: (value) => dispatch({type:\"SELECT_QUANTITY\", value:value}),\n    resetQuantity: () => dispatch({type:\"RESET_QUANTITY\"})\n  }\n}\n\nexport default connect(msp,mdp)(OrderView) ","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/context/AuthProvider.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveAuthCode.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveUserInfo.js",["117","118"],"import React from \"react\"\nimport { useHistory } from 'react-router-dom'\n\n\nconst RetrieveUserInfo = () => {\n  const history = useHistory();\n  const access_token = localStorage.getItem('docusign_access_token')\n\n  const fetchUser = React.useCallback(() => {\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n      body: JSON.stringify({access_token: access_token })\n    }\n\n    fetch(`http://localhost:3000/api/v1/docusign/retrieve_user_info`, fetchObj)\n    .then(resp => resp.json())\n    .then(resp => console.log(resp))\n  }, [])\n\n   React.useEffect(fetchUser, [])\n  \n      history.push(\"/\");\n      return null;\n    }\n\n\nexport default RetrieveUserInfo","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CreateEnvelope.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Logout.js",["119"],"import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\";\n\nconst LogoutButton = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const HandleLogout = () => {\n    localStorage.removeItem('auth_token')\n    localStorage.removeItem('docusign_access_token')\n    dispatch({ type: \"LOGOUT_USER\"})\n    history.push(\"/\")\n  }\n  \n  return(\n     <a onClick={() => HandleLogout()} className=\"main-nav\" activeClassName=\"main-nav-active\">Logout</a>\n  )\n}\n\n\n\nexport default LogoutButton","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/auth/useAuth.js",["120"],"import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\n\n\nconst TIMEOUT = 30000;\nlet authIntervalTimer = null;\n\nexport const useAuth = () => {\n  const [authTime, setAuthTime] = useState(null);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n\n     //Fetch User Function\n  // const getUser = useCallback(() => {\n    \n  //   const token = localStorage.getItem('auth_token');\n    \n  //   if (token) {\n  //     const fetchObj = {\n  //       method: 'GET',\n  //       headers: {\n  //         'Auth-Token': token,\n  //         'Content-Type': 'application/json',\n  //       },\n  //     }\n\n  //     fetch(`http://localhost:3000/api/v1/doctors/showdoctor`, fetchObj)\n  //       .then(res => res.json())\n  //       .then(data => {\n  //         if (data.user) {\n  //           console.log(data)\n  //           dispatch({ type: 'LOGIN_USER', user: data.user });\n  //           setAuthTime(new Date(data.user.last_logged_in).getTime());\n  //         }\n  //         else if (data.message) {\n  //           enqueueSnackbar(data.message, { variant: 'error' });\n  //         }\n  //         else {\n  //           enqueueSnackbar('Sorry there was an error with the fetch user request', { variant: 'error' });\n  //         }\n  //       })\n  //       .catch(err => enqueueSnackbar(`Sorry there was an error with that request: ${err}`, { variant: 'error' }));\n  //   }\n  // }, [dispatch, enqueueSnackbar]);\n\n  // // useEffect to load user on initial load (runs one time when hook is initialized)\n  // useEffect(() => {\n  //   getUser();\n  // }, [getUser])\n      \n      //Signup Function\n  const signupUser = useCallback((name, password, email, address_1, address_2, city, state, zipcode, license_id, professional_title, phone_number) => {\n    const doctor = {\n      name, \n      password,\n      email,\n      address_1,\n      address_2,\n      city,\n      state, \n      zipcode, \n      license_id,\n      professional_title,\n      phone_number,\n    }\n\n    const fetchObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        doctor\n      })\n    }\n\n    fetch(`http://localhost:3000/api/v1/doctors`, fetchObj)\n      .then(res => res.json())\n      .then(data => {\n        if (data.token) {\n          localStorage.setItem('auth_token', data.token);\n          setAuthTime(new Date(data.doctor.last_logged_in).getTime());\n          dispatch({ type: 'LOGIN_USER', user: data.doctor })\n        }\n        else if (data.errors) {\n          enqueueSnackbar(data.errors, { variant: 'error' });\n        }\n        else {\n          enqueueSnackbar('Sorry there was an error with the request', { variant: 'error' });\n        }\n      })\n      .catch(err => enqueueSnackbar(`Sorry there was an error with that request: ${err}`, { variant: 'error' }));\n  }, [dispatch, enqueueSnackbar]);\n      \n      \n      \n      \n\n      //Login Function\n      const loginUser = useCallback((name, password) => {\n        const doctor = {\n          doctor: {\n            name,\n            password,\n          }\n        }\n      \n        const fetchObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(doctor)\n        }\n        \n        fetch(`http://localhost:3000/api/v1/sessions`, fetchObj)\n          .then(res => res.json())\n          .then(data => {\n            if (data.token) {\n              localStorage.setItem('auth_token', data.token);\n              setAuthTime(new Date(data.doctor.last_logged_in).getTime());\n              dispatch({ type: 'LOGIN_USER', user: data.doctor })\n            }\n            else if (data.message) {\n              enqueueSnackbar(data.message, { variant: 'error' });\n            }\n            else {\n              enqueueSnackbar('Sorry there was an error with the request', { variant: 'error' });\n            }\n          })\n          .catch(err => enqueueSnackbar(`Sorry there was an error with that request: ${err}`, { variant: 'error' }));\n      }, [dispatch, enqueueSnackbar]);\n  \n  //Logout Function\n  const logoutUser = useCallback(() => {\n    console.log(\"I'm logging out the user\")\n    localStorage.clear('auth_token');\n    dispatch({ type: 'LOGOUT_USER' });\n  }, [])\n\n  useEffect(() => {\n    console.log(\"I'm in the useEffect for authtime\")\n    if (authIntervalTimer) {\n      console.log(\"I'm about to clear the auth interval Timer\")\n      clearInterval(authIntervalTimer);\n    }\n\n    authIntervalTimer = setInterval(() => {\n      console.log(\"I am in the setInteval\")\n      if (authTime && (Date.now() > authTime + TIMEOUT)) {\n        console.log(\"I should be in this every 5 seconds\")\n        setAuthTime(null);\n        logoutUser();\n      }\n    }, 1000);\n\n    return () => clearInterval(authIntervalTimer);\n  }, [authTime, logoutUser]);\n\n  return { loginUser, logoutUser, signupUser}\n}\n\n","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CheckStatusInterval.js",["121"],"import { useEffect } from \"react\"\n\nconst CheckStatusInterval = () => {\n  \n  \n    const access_token = localStorage.getItem('docusign_access_token')\n    const token = localStorage.getItem('auth_token')\n\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        const fetchObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Auth-Token': token\n          },\n          body: JSON.stringify({access_token: access_token })\n        }\n    \n        fetch(`http://localhost:3000/api/v1/docusign/check_envelope_status`, fetchObj)\n        return null;\n      }, 60000);\n      return () => clearInterval(interval)\n    }, []);\n\n  return(\n    null\n  )\n}\n\nexport default CheckStatusInterval","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/SendOrdersInterval.js",["122"],"import { useEffect } from \"react\"\n\nconst SendOrdersInterval = () => {\n  \n  const token = localStorage.getItem('auth_token')\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      const fetchObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Auth-Token': token\n        }\n      }\n  \n      fetch(`http://localhost:3000/api/v1/doctor_orders/send_warehouse_emails`, fetchObj)\n      return null;\n    }, 60000);\n    return () => clearInterval(interval)\n  }, []);\n\n  \n  return (\n    null\n  )\n}\n\nexport default SendOrdersInterval",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":10,"column":35,"nodeType":"129","endLine":10,"endColumn":37,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"131","line":13,"column":32,"nodeType":"129","endLine":13,"endColumn":34,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":27},{"ruleId":"133","severity":1,"message":"137","line":9,"column":22,"nodeType":"135","messageId":"136","endLine":9,"endColumn":32},{"ruleId":"127","severity":1,"message":"138","line":9,"column":40,"nodeType":"129","endLine":9,"endColumn":42,"suggestions":"139"},{"ruleId":"133","severity":1,"message":"140","line":1,"column":26,"nodeType":"135","messageId":"136","endLine":1,"endColumn":37},{"ruleId":"133","severity":1,"message":"141","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":28},{"ruleId":"133","severity":1,"message":"142","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":21},{"ruleId":"133","severity":1,"message":"143","line":12,"column":23,"nodeType":"135","messageId":"136","endLine":12,"endColumn":37},{"ruleId":"127","severity":1,"message":"144","line":29,"column":6,"nodeType":"129","endLine":29,"endColumn":8,"suggestions":"145"},{"ruleId":"127","severity":1,"message":"131","line":31,"column":4,"nodeType":"146","endLine":31,"endColumn":19,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":17,"column":6,"nodeType":"150","endLine":17,"endColumn":95},{"ruleId":"127","severity":1,"message":"151","line":138,"column":6,"nodeType":"129","endLine":138,"endColumn":8,"suggestions":"152"},{"ruleId":"127","severity":1,"message":"153","line":26,"column":8,"nodeType":"129","endLine":26,"endColumn":10,"suggestions":"154"},{"ruleId":"127","severity":1,"message":"155","line":22,"column":6,"nodeType":"129","endLine":22,"endColumn":8,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSamples'. Either include it or remove the dependency array.","ArrayExpression",["159"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["160"],"no-unused-vars","'loginErrorMessage' is assigned a value but never used.","Identifier","unusedVar","'logoutUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserOrders'. Either include it or remove the dependency array.",["161"],"'useDispatch' is defined but never used.","'signupErrorMessage' is assigned a value but never used.","'successShow' is assigned a value but never used.","'setSuccessShow' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'access_token'. Either include it or remove the dependency array.",["162"],"MemberExpression",["163"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'access_token' and 'token'. Either include them or remove the dependency array.",["165"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"169","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [fetchSamples]",{"range":"182","text":"183"},"Update the dependencies array to be: [fetchUser]",{"range":"184","text":"185"},"Update the dependencies array to be: [fetchUserOrders]",{"range":"186","text":"187"},"Update the dependencies array to be: [access_token]",{"range":"188","text":"189"},{"range":"190","text":"185"},"Update the dependencies array to be: [dispatch]",{"range":"191","text":"192"},"Update the dependencies array to be: [access_token, token]",{"range":"193","text":"194"},"Update the dependencies array to be: [token]",{"range":"195","text":"196"},[323,325],"[fetchSamples]",[391,393],"[fetchUser]",[267,269],"[fetchUserOrders]",[729,731],"[access_token]",[764,766],[4314,4316],"[dispatch]",[692,694],"[access_token, token]",[545,547],"[token]"]