[{"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js":"1","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js":"2","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js":"3","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js":"4","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js":"5","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js":"6","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js":"7","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js":"8","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js":"9","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js":"10","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js":"11","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js":"12","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js":"13","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js":"14","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js":"15","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveAuthCode.js":"16","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveUserInfo.js":"17","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CreateEnvelope.js":"18","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Logout.js":"19","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CheckStatusButton.js":"20","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/TestOrdersButton.js":"21"},{"size":773,"mtime":1609806219160,"results":"22","hashOfConfig":"23"},{"size":223,"mtime":1610557916520,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1607442902563,"results":"25","hashOfConfig":"23"},{"size":944,"mtime":1620832710267,"results":"26","hashOfConfig":"23"},{"size":1986,"mtime":1626810449326,"results":"27","hashOfConfig":"23"},{"size":1396,"mtime":1616375540779,"results":"28","hashOfConfig":"23"},{"size":1614,"mtime":1626201197570,"results":"29","hashOfConfig":"23"},{"size":631,"mtime":1616375540778,"results":"30","hashOfConfig":"23"},{"size":859,"mtime":1616375540782,"results":"31","hashOfConfig":"23"},{"size":1722,"mtime":1616375540777,"results":"32","hashOfConfig":"23"},{"size":733,"mtime":1616375540782,"results":"33","hashOfConfig":"23"},{"size":546,"mtime":1624387409553,"results":"34","hashOfConfig":"23"},{"size":577,"mtime":1616375540780,"results":"35","hashOfConfig":"23"},{"size":2548,"mtime":1626810111359,"results":"36","hashOfConfig":"23"},{"size":3214,"mtime":1626109705741,"results":"37","hashOfConfig":"23"},{"size":396,"mtime":1619795348700,"results":"38","hashOfConfig":"23"},{"size":832,"mtime":1625074610046,"results":"39","hashOfConfig":"23"},{"size":259,"mtime":1620154477520,"results":"40","hashOfConfig":"23"},{"size":540,"mtime":1625855406141,"results":"41","hashOfConfig":"23"},{"size":774,"mtime":1626202835525,"results":"42","hashOfConfig":"23"},{"size":560,"mtime":1626807507640,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"yjpb4k",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/index.js",[],["91","92"],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/App.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reportWebVitals.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/reducers/reducer.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Navbar.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Samples.js",["93"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport SampleCard from '../containers/SampleCard'\nimport { Row, Col } from 'react-bootstrap'\nimport SampleView from '../containers/SampleView'\n\nclass Samples extends React.Component {\n  \n  componentDidMount() {\n    this.fetchSamples();\n  }\n\n  fetchSamples = () => {\n    fetch ('http://localhost:3000/api/v1/samples')\n    .then(resp => resp.json())\n    .then(allSamples => this.props.renderSamples(allSamples))\n  }\n\n  renderAllSamples = () => {\n    return this.props.allSamples.map((sample, index) =>\n      <SampleCard\n        key={index}\n        sample={sample}\n      />\n    )\n  }\n  \n  render() {\n    return(\n      <Row>\n        <Col className=\"card-column\" md=\"auto\">\n          <div className=\"samples-container\">\n            {this.props.allSamples ? this.renderAllSamples() : \"samples deleted from state\"}\n          </div>\n        </Col>\n        <Col className=\"sample-column\">\n          <div className=\"sample-view\">          \n            {this.props.selectedSample ? <SampleView/> : <h1>Please Select a Sample</h1>}\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nconst msp = state => {\n  return {\n    allSamples: state.allSamples,\n    selectedSample: state.selectedSample\n  }\n}\n\nconst mdp = dispatch => {\n  return {\n    renderSamples: (allSamples) => dispatch({ type: \"GET_ALL_SAMPLES\", allSamples: allSamples})\n  }\n}\n\nexport default connect(msp,mdp)(Samples)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Home.js",["94"],"import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport UserSample from '../containers/UserSamples'\nimport {Row, Col} from 'react-bootstrap'\nimport LoginSignup from '../containers/LoginSignup'\nimport CheckStatusButton from './CheckStatusButton'\nimport TestOrdersButton from './TestOrdersButton'\n\n\n\nconst Home = props => {\n  useEffect(() => fetchUser(), []);\n\n  const fetchUser = () => {\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n    }\n\n    fetch(`http://localhost:3000/api/v1/doctors/showdoctor`, fetchObj)\n    .then(resp => resp.json())\n    .then(user => props.loginUser(user))\n  }\n  \n  return props.user ? (\n    <div className=\"home-main\">\n      <h2>Welcome, Dr. {props.user ? props.user.name : null}</h2>\n      <Row>\n        <Col className=\"user-samples-main\">\n          <h3>Click on a past sample for tracking information</h3>\n          {props.user.samples ? <UserSample/> : \"No First Doses\"}\n        </Col>\n        <Col className=\"user-info-main\">\n          <a href=\"https://local.fedex.com/en-us/track/\">Click here to track package</a>\n          <CheckStatusButton/>\n          <TestOrdersButton/>\n        </Col>\n      </Row>\n    </div>\n  ) :\n  (\n    <LoginSignup />\n  )\n}\n\nconst msp = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mdp = (dispatch) => {\n  return {\n    loginUser: (user) => dispatch({type:\"LOGIN_USER\", user:user})\n  }\n}\n\nexport default connect(msp, mdp)(Home)","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Profile.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleCard.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Login.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/SampleView.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/UserSamples.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/LoginSignup.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Signup.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/containers/OrderView.js",["95"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {Button, Modal, } from 'react-bootstrap';\n\n\nconst OrderView = (props) => {\n  const history = useHistory();\n  const [lgShow, setLgShow] = useState(false);\n  \n  const orderClick = () => {\n      createDoctorOrder();\n      props.resetQuantity();\n      alert(\"Your order has been sent.  Please check the email associated with this account to sign for your order.\")\n    }\n\n  const createDoctorOrder = () => {    \n    let accessToken = localStorage.getItem('docusign_access_token')\n    let token = localStorage.getItem('auth_token')\n    const doctor_order= {\n      quantity: props.quantity,\n      sample_id: props.selectedSample.id,\n      token: accessToken\n    }\n    \n    fetch (`http://localhost:3000/api/v1/doctor_orders`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n         Accept: \"application/json\",\n         'Auth-Token': token\n      },\n      body: JSON.stringify(\n        doctor_order\n      )\n    })\n      // .then(resp => resp.json())\n      // .then((newOrder) => {\n      //   console.log(newOrder)\n      // })\n    }\n\n  const handleSelect = e => {\n    let value = e.target.value\n    props.selectQuantity(value)\n  }\n\n  const {professional_title, address_1, address_2, name, city, state, zipcode} = props.user\n\n  return (\n  <div className=\"order-form-container\">\n      <br></br>\n     <Button onClick={() => setLgShow(true)}>Order Sample</Button>\n     <Modal\n        size=\"lg\"\n        show={lgShow}\n        onHide={() => setLgShow(false)}\n        aria-labelledby=\"modal-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"modal-title\">\n            Order Form\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h5>Order will be sent to: </h5>\n          <div className=\"modal-doc-info\"></div>\n            {professional_title} {name}\n            <br></br>\n            {address_1}\n            <br></br>\n            {address_2}\n            <br></br>\n            {city} {state}, {zipcode}\n          <div className=\"modal-quantity-select\">\n          <select name=\"quantity\" onChange={handleSelect}>\n            <option value=\"none\" > \n              Select Quantity\n            </option> \n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select>\n          </div>\n      <br></br>\n      {/* call Ruby backend to initiate status//alert user that an order is pending docusign check their email//modal.close() */}\n      <Button onClick={() => orderClick()} disabled={!props.quantity}>Order Sample</Button>\n        </Modal.Body>\n      </Modal>\n  </div>\n  )\n}\n\nconst msp = state => {\n  return {\n    user: state.user,\n    selectedSample: state.selectedSample,\n    quantity: state.quantity\n  }\n}\nconst mdp = dispatch => {\n  return {\n    renderNewSample: (newSample) => dispatch({type:\"RENDER_NEW_SAMPLE\", newSample:newSample}),\n    selectQuantity: (value) => dispatch({type:\"SELECT_QUANTITY\", value:value}),\n    resetQuantity: () => dispatch({type:\"RESET_QUANTITY\"})\n  }\n}\n\nexport default connect(msp,mdp)(OrderView) ","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveAuthCode.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/RetrieveUserInfo.js",["96","97"],"import React from \"react\"\nimport { useHistory } from 'react-router-dom'\n\n\nconst RetrieveUserInfo = () => {\n  const history = useHistory();\n  const access_token = localStorage.getItem('docusign_access_token')\n\n  const fetchUser = React.useCallback(() => {\n    const token = localStorage.getItem('auth_token')\n\n    if(!token) {\n      return\n    }\n\n    const fetchObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Token': token\n      },\n      body: JSON.stringify({access_token: access_token })\n    }\n\n    fetch(`http://localhost:3000/api/v1/docusign/retrieve_user_info`, fetchObj)\n    .then(resp => resp.json())\n    .then(resp => console.log(resp))\n  }, [])\n\n   React.useEffect(fetchUser, [])\n  \n      history.push(\"/\");\n      return null;\n    }\n\n\nexport default RetrieveUserInfo","/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CreateEnvelope.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/Logout.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/CheckStatusButton.js",[],"/Users/josephpatterson/Desktop/samples-frontend/samples-frontend-v1/src/components/TestOrdersButton.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":9,"column":35,"nodeType":"104","endLine":9,"endColumn":37,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":12,"column":32,"nodeType":"104","endLine":12,"endColumn":34,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":8,"column":9,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"102","severity":1,"message":"112","line":28,"column":6,"nodeType":"104","endLine":28,"endColumn":8,"suggestions":"113"},{"ruleId":"102","severity":1,"message":"106","line":30,"column":4,"nodeType":"114","endLine":30,"endColumn":19,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSamples'. Either include it or remove the dependency array.","ArrayExpression",["118"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["119"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useCallback has a missing dependency: 'access_token'. Either include it or remove the dependency array.",["120"],"MemberExpression",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"124","fix":"128"},"Update the dependencies array to be: [fetchSamples]",{"range":"129","text":"130"},"Update the dependencies array to be: [fetchUser]",{"range":"131","text":"132"},"Update the dependencies array to be: [access_token]",{"range":"133","text":"134"},{"range":"135","text":"132"},[286,288],"[fetchSamples]",[383,385],"[fetchUser]",[707,709],"[access_token]",[742,744]]